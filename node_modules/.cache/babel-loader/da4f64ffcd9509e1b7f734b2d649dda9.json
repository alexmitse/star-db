{"ast":null,"code":"import _classCallCheck from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import SwapiService from'../../services/swapi-service';import Spinner from'../spinner';import ErrorIndicator from'../errorIndicator';import'./random-planet.css';var RandomPlanet=/*#__PURE__*/function(_Component){_inherits(RandomPlanet,_Component);function RandomPlanet(props){var _this;_classCallCheck(this,RandomPlanet);_this=_possibleConstructorReturn(this,_getPrototypeOf(RandomPlanet).call(this,props));_this.swapiService=new SwapiService();_this.onPlanetLoaded=function(planet){_this.setState({planet:planet,loading:false,error:false});};_this.onError=function(){_this.setState({error:true,loading:false});};_this.updatePlanet=function(){var id=Math.floor(Math.random()*25)+3;_this.swapiService.getPlanet(id).then(_this.onPlanetLoaded).catch(_this.onError);};_this.state={planet:{},loading:true};return _this;}_createClass(RandomPlanet,[{key:\"componentDidMount\",value:function componentDidMount(){this.updatePlanet();this.interval=setInterval(this.updatePlanet,10000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interval);}},{key:\"render\",value:function render(){var _this$state=this.state,planet=_this$state.planet,loading=_this$state.loading,error=_this$state.error;var hasDate=!(loading||error);// const planets = { planet };\nvar spinner=loading?React.createElement(Spinner,null):null;var errorMessage=error?React.createElement(ErrorIndicator,null):null;var content=hasDate?React.createElement(PlanetView,{planet:planet}):null;return React.createElement(\"div\",{className:\"random-planet jumbotron rounded\"},errorMessage,spinner,content);}}]);return RandomPlanet;}(Component);export{RandomPlanet as default};var PlanetView=function PlanetView(prop){var planet=prop.planet;var id=planet.id,name=planet.name,population=planet.population,climate=planet.climate;return React.createElement(React.Fragment,null,React.createElement(\"img\",{className:\"planet-image\",src:\"https://starwars-visualguide.com/assets/img/planets/\".concat(id,\".jpg\"),alt:\"i'm so sorry\"}),React.createElement(\"div\",{className:\"planet-information\"},React.createElement(\"h4\",null,name),React.createElement(\"ul\",{className:\"list-group list-group-flush\"},React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",{className:\"term\"},\"Population\"),React.createElement(\"span\",null,population)),React.createElement(\"li\",{className:\"list-group-item\"},React.createElement(\"span\",{className:\"term\"},\"climate\"),React.createElement(\"span\",null,climate)))));};","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/random-planet/random-planet.jsx"],"names":["React","Component","SwapiService","Spinner","ErrorIndicator","RandomPlanet","props","swapiService","onPlanetLoaded","planet","setState","loading","error","onError","updatePlanet","id","Math","floor","random","getPlanet","then","catch","state","interval","setInterval","clearInterval","hasDate","spinner","errorMessage","content","PlanetView","prop","name","population","climate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport SwapiService from '../../services/swapi-service';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../errorIndicator';\n\nimport './random-planet.css';\n\nexport default class RandomPlanet extends Component {\n  swapiService = new SwapiService();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      planet: {},\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 10000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false,\n      error: false,\n    });\n  };\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random() * 25) + 3;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { planet, loading, error } = this.state;\n\n    const hasDate = !(loading || error);\n    // const planets = { planet };\n    const spinner = loading ? <Spinner /> : null;\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    const content = hasDate ? <PlanetView planet={planet} /> : null;\n\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = (prop) => {\n  const { planet } = prop;\n  const { id, name, population, climate } = planet;\n\n  return (\n    <>\n      <img\n        className=\"planet-image\"\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n        alt=\"i'm so sorry\"\n      />\n      <div className=\"planet-information\">\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population</span>\n            <span>{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">climate</span>\n            <span>{climate}</span>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}