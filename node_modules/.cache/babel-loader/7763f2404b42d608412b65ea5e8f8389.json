{"ast":null,"code":"import _toArray from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";import _slicedToArray from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/prop-types */ /* eslint-disable prefer-template */import React from'react';import{useLocation}from'react-router-dom';import queryString from'query-string';import'./query-work.css';import Filter from'../filter/filter';export default function QueryWork(_ref){var data=_ref.data;var queryStr=[];var parsed=queryString.parse(useLocation().search);function onSetObj(object){Object.keys(object).forEach(function(item){var _Object$entries=Object.entries(object[item]),_Object$entries2=_slicedToArray(_Object$entries,1),objNextProperty=_Object$entries2[0];switch(item){case'checkbox':queryStr=Object.entries(objNextProperty[1]).filter(function(_ref2){var _ref3=_toArray(_ref2),keyValue=_ref3.slice(0);return keyValue[1];});queryStr=queryStr.map(function(element){return\"\".concat(objNextProperty[0],\"=\").concat(element[0]);});break;case'list':if(Object.values(objNextProperty[1]).length===1)Object.values(objNextProperty[1]).forEach(function(value){queryStr.push(\"\".concat(objNextProperty[0],\"=\").concat(value));queryStr=queryStr.filter(function(element){return!element.includes(\"\".concat(objNextProperty[0]))[0];});});break;case'number':Object.entries(objNextProperty[1]).forEach(function(element){queryStr.push(\"\".concat(objNextProperty[0]).concat(element[0],\"=\").concat(element[1]));});queryStr=queryStr.filter(function(element){return!element.includes(\"\".concat(objNextProperty[0]))[0];});break;default:break;}queryStr.join('&');var newurl=window.location.protocol+'//'+window.location.host+window.location.pathname+'?'+queryStr.join('&');window.history.pushState({path:newurl},'',newurl);});}return React.createElement(Filter,{data:data,onSetObj:onSetObj,query:parsed});}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/query-work/query-work.jsx"],"names":["React","useLocation","queryString","Filter","QueryWork","data","queryStr","parsed","parse","search","onSetObj","object","Object","keys","forEach","item","entries","objNextProperty","filter","keyValue","map","element","values","length","value","push","includes","join","newurl","window","location","protocol","host","pathname","history","pushState","path"],"mappings":"kSAAA,qC,CACA,oCACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAEA,cAAe,SAASC,CAAAA,SAAT,MAA6B,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAC1C,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,MAAM,CAAGL,WAAW,CAACM,KAAZ,CAAkBP,WAAW,GAAGQ,MAAhC,CAAf,CACA,QAASC,CAAAA,QAAT,CAAkBC,MAAlB,CAA0B,CACxBC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,SAACC,IAAD,CAAU,qBACVH,MAAM,CAACI,OAAP,CAAeL,MAAM,CAACI,IAAD,CAArB,CADU,oDAC7BE,eAD6B,qBAEpC,OAAQF,IAAR,EACE,IAAK,UAAL,CACET,QAAQ,CAAGM,MAAM,CAACI,OAAP,CAAeC,eAAe,CAAC,CAAD,CAA9B,EAAmCC,MAAnC,CACT,0CAAKC,QAAL,sBAAmBA,CAAAA,QAAQ,CAAC,CAAD,CAA3B,EADS,CAAX,CAGAb,QAAQ,CAAGA,QAAQ,CAACc,GAAT,CACT,SAACC,OAAD,kBAAgBJ,eAAe,CAAC,CAAD,CAA/B,aAAsCI,OAAO,CAAC,CAAD,CAA7C,GADS,CAAX,CAGA,MACF,IAAK,MAAL,CACE,GAAIT,MAAM,CAACU,MAAP,CAAcL,eAAe,CAAC,CAAD,CAA7B,EAAkCM,MAAlC,GAA6C,CAAjD,CACEX,MAAM,CAACU,MAAP,CAAcL,eAAe,CAAC,CAAD,CAA7B,EAAkCH,OAAlC,CAA0C,SAACU,KAAD,CAAW,CACnDlB,QAAQ,CAACmB,IAAT,WAAiBR,eAAe,CAAC,CAAD,CAAhC,aAAuCO,KAAvC,GACAlB,QAAQ,CAAGA,QAAQ,CAACY,MAAT,CACT,SAACG,OAAD,QAAa,CAACA,OAAO,CAACK,QAAR,WAAoBT,eAAe,CAAC,CAAD,CAAnC,GAA0C,CAA1C,CAAd,EADS,CAAX,CAGD,CALD,EAOF,MACF,IAAK,QAAL,CACEL,MAAM,CAACI,OAAP,CAAeC,eAAe,CAAC,CAAD,CAA9B,EAAmCH,OAAnC,CAA2C,SAACO,OAAD,CAAa,CACtDf,QAAQ,CAACmB,IAAT,WAAiBR,eAAe,CAAC,CAAD,CAAhC,SAAsCI,OAAO,CAAC,CAAD,CAA7C,aAAoDA,OAAO,CAAC,CAAD,CAA3D,GACD,CAFD,EAGAf,QAAQ,CAAGA,QAAQ,CAACY,MAAT,CACT,SAACG,OAAD,QAAa,CAACA,OAAO,CAACK,QAAR,WAAoBT,eAAe,CAAC,CAAD,CAAnC,GAA0C,CAA1C,CAAd,EADS,CAAX,CAGA,MACF,QACE,MA5BJ,CA8BAX,QAAQ,CAACqB,IAAT,CAAc,GAAd,EACA,GAAMC,CAAAA,MAAM,CACVC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CACA,IADA,CAEAF,MAAM,CAACC,QAAP,CAAgBE,IAFhB,CAGAH,MAAM,CAACC,QAAP,CAAgBG,QAHhB,CAIA,GAJA,CAKA3B,QAAQ,CAACqB,IAAT,CAAc,GAAd,CANF,CAQAE,MAAM,CAACK,OAAP,CAAeC,SAAf,CAAyB,CAAEC,IAAI,CAAER,MAAR,CAAzB,CAA2C,EAA3C,CAA+CA,MAA/C,EACD,CA1CD,EA2CD,CAED,MAAO,qBAAC,MAAD,EAAQ,IAAI,CAAEvB,IAAd,CAAoB,QAAQ,CAAEK,QAA9B,CAAwC,KAAK,CAAEH,MAA/C,EAAP,CACD","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable prefer-template */\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport './query-work.css';\nimport Filter from '../filter/filter';\n\nexport default function QueryWork({ data }) {\n  let queryStr = [];\n  const parsed = queryString.parse(useLocation().search);\n  function onSetObj(object) {\n    Object.keys(object).forEach((item) => {\n      const [objNextProperty] = Object.entries(object[item]);\n      switch (item) {\n        case 'checkbox':\n          queryStr = Object.entries(objNextProperty[1]).filter(\n            ([...keyValue]) => keyValue[1],\n          );\n          queryStr = queryStr.map(\n            (element) => `${objNextProperty[0]}=${element[0]}`,\n          );\n          break;\n        case 'list':\n          if (Object.values(objNextProperty[1]).length === 1)\n            Object.values(objNextProperty[1]).forEach((value) => {\n              queryStr.push(`${objNextProperty[0]}=${value}`);\n              queryStr = queryStr.filter(\n                (element) => !element.includes(`${objNextProperty[0]}`)[0],\n              );\n            });\n\n          break;\n        case 'number':\n          Object.entries(objNextProperty[1]).forEach((element) => {\n            queryStr.push(`${objNextProperty[0]}${element[0]}=${element[1]}`);\n          });\n          queryStr = queryStr.filter(\n            (element) => !element.includes(`${objNextProperty[0]}`)[0],\n          );\n          break;\n        default:\n          break;\n      }\n      queryStr.join('&');\n      const newurl =\n        window.location.protocol +\n        '//' +\n        window.location.host +\n        window.location.pathname +\n        '?' +\n        queryStr.join('&');\n\n      window.history.pushState({ path: newurl }, '', newurl);\n    });\n  }\n\n  return <Filter data={data} onSetObj={onSetObj} query={parsed} />;\n}\n"]},"metadata":{},"sourceType":"module"}