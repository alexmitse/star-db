{"ast":null,"code":"import _slicedToArray from \"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/amitsevich/STAR-DB/star-db/src/components/query-work/query-work.jsx\";\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable prefer-template */\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport './query-work.css';\nimport Filter from '../filter/filter';\nexport default function QueryWork({\n  data\n}) {\n  let queryStr = [];\n  const parsed = queryString.parse(useLocation().search);\n\n  function onSetObj(object) {\n    Object.keys(object).forEach(item => {\n      const _Object$entries = Object.entries(object[item]),\n            _Object$entries2 = _slicedToArray(_Object$entries, 1),\n            objNextProperty = _Object$entries2[0];\n\n      switch (item) {\n        case 'checkbox':\n          queryStr = Object.entries(objNextProperty[1]).filter(([...keyValue]) => keyValue[1]);\n          queryStr = queryStr.map(element => `${objNextProperty[0]}=${element[0]}`);\n          break;\n\n        case 'list':\n          if (Object.values(objNextProperty[1]).length === 1) Object.values(objNextProperty[1]).forEach(value => {\n            queryStr.push(`${objNextProperty[0]}=${value}`);\n            queryStr = queryStr.filter(element => !element.includes(`${objNextProperty[0]}`)[0]);\n          });\n          break;\n\n        case 'number':\n          Object.entries(objNextProperty[1]).forEach(element => {\n            queryStr.push(`${objNextProperty[0]}${element[0]}=${element[1]}`);\n          });\n          queryStr = queryStr.filter(element => !element.includes(`${objNextProperty[0]}`)[0]);\n          break;\n\n        default:\n          break;\n      }\n\n      queryStr.join('&');\n      const newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?' + queryStr.join('&');\n      window.history.pushState({\n        path: newurl\n      }, '', newurl);\n    });\n  }\n\n  return React.createElement(Filter, {\n    data: data,\n    onSetObj: onSetObj,\n    query: parsed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/query-work/query-work.jsx"],"names":["React","useLocation","queryString","Filter","QueryWork","data","queryStr","parsed","parse","search","onSetObj","object","Object","keys","forEach","item","entries","objNextProperty","filter","keyValue","map","element","values","length","value","push","includes","join","newurl","window","location","protocol","host","pathname","history","pushState","path"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable prefer-template */\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport './query-work.css';\nimport Filter from '../filter/filter';\n\nexport default function QueryWork({ data }) {\n  let queryStr = [];\n  const parsed = queryString.parse(useLocation().search);\n  function onSetObj(object) {\n    Object.keys(object).forEach((item) => {\n      const [objNextProperty] = Object.entries(object[item]);\n      switch (item) {\n        case 'checkbox':\n          queryStr = Object.entries(objNextProperty[1]).filter(\n            ([...keyValue]) => keyValue[1],\n          );\n          queryStr = queryStr.map(\n            (element) => `${objNextProperty[0]}=${element[0]}`,\n          );\n          break;\n        case 'list':\n          if (Object.values(objNextProperty[1]).length === 1)\n            Object.values(objNextProperty[1]).forEach((value) => {\n              queryStr.push(`${objNextProperty[0]}=${value}`);\n              queryStr = queryStr.filter(\n                (element) => !element.includes(`${objNextProperty[0]}`)[0],\n              );\n            });\n\n          break;\n        case 'number':\n          Object.entries(objNextProperty[1]).forEach((element) => {\n            queryStr.push(`${objNextProperty[0]}${element[0]}=${element[1]}`);\n          });\n          queryStr = queryStr.filter(\n            (element) => !element.includes(`${objNextProperty[0]}`)[0],\n          );\n          break;\n        default:\n          break;\n      }\n      queryStr.join('&');\n      const newurl =\n        window.location.protocol +\n        '//' +\n        window.location.host +\n        window.location.pathname +\n        '?' +\n        queryStr.join('&');\n\n      window.history.pushState({ path: newurl }, '', newurl);\n    });\n  }\n\n  return <Filter data={data} onSetObj={onSetObj} query={parsed} />;\n}\n"]},"metadata":{},"sourceType":"module"}