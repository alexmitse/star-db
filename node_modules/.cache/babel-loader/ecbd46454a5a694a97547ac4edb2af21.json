{"ast":null,"code":"import _slicedToArray from \"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/amitsevich/STAR-DB/star-db/src/components/people-page-list/people-page-list.jsx\";\n\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ItemList from '../item-list';\nimport Pagination from '../pagination';\nimport Spinner from '../spinner';\nimport './people-page-list.css';\nimport SwapiService from '../../services/swapi-service';\nimport QueryWork from '../query-work/query-work';\nexport default function PeolpePageList() {\n  const swapiService = new SwapiService();\n\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  const query = useQuery();\n  const page = query.get('page');\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        peopleCount = _useState2[0],\n        setPeopleCount = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        peopleList = _useState4[0],\n        setPeopleList = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentElement = _useState6[0],\n        setCurrentElement = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 1),\n        filter = _useState8[0];\n\n  const _useState9 = useState(10),\n        _useState10 = _slicedToArray(_useState9, 1),\n        sizeList = _useState10[0];\n\n  const data = [{\n    films: {\n      type: 'checkbox',\n      dataList: [`films_1`, `films_2`, `films_3`, `films_4`]\n    }\n  }, {\n    gender: {\n      type: 'list',\n      dataList: ['male', 'female', 'a']\n    }\n  }, {\n    rotationPeriod: {\n      type: 'number',\n      dataList: ['0', '5']\n    }\n  }];\n  useEffect(() => {\n    swapiService.getAllPeople(`${+page > 9 || // change 9 on variable\n    +page < 1 && !(currentElement === +page) || page === null ? 1 : page} `, filter).then(([peopleListFromServer, peopleCountFromServer]) => {\n      setPeopleList(peopleListFromServer);\n      setPeopleCount(peopleCountFromServer);\n    });\n  }, []);\n\n  const onChangeCurrentElement = element => {\n    if (!(element > 9 || element < 1 || currentElement === element)) {\n      swapiService.getAllPeople(`${element}`, filter).then(([peopleListFromServer]) => {\n        setPeopleList(peopleListFromServer);\n        setCurrentElement(element);\n      });\n    }\n  };\n\n  if (!peopleList) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"people-page-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"people-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(ItemList, {\n    list: peopleList,\n    lable: \"people\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    totalCount: peopleCount,\n    currentPage: page === ':page' ? currentElement : page,\n    setCurrentPage: onChangeCurrentElement,\n    name: \"people\",\n    size: sizeList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"people-page-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(QueryWork, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/people-page-list/people-page-list.jsx"],"names":["React","useState","useEffect","useLocation","ItemList","Pagination","Spinner","SwapiService","QueryWork","PeolpePageList","swapiService","useQuery","URLSearchParams","search","query","page","get","peopleCount","setPeopleCount","peopleList","setPeopleList","currentElement","setCurrentElement","filter","sizeList","data","films","type","dataList","gender","rotationPeriod","getAllPeople","then","peopleListFromServer","peopleCountFromServer","onChangeCurrentElement","element"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ItemList from '../item-list';\nimport Pagination from '../pagination';\nimport Spinner from '../spinner';\nimport './people-page-list.css';\nimport SwapiService from '../../services/swapi-service';\nimport QueryWork from '../query-work/query-work';\n\nexport default function PeolpePageList() {\n  const swapiService = new SwapiService();\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n  const query = useQuery();\n  const page = query.get('page');\n  const [peopleCount, setPeopleCount] = useState(null);\n  const [peopleList, setPeopleList] = useState(null);\n  const [currentElement, setCurrentElement] = useState(1);\n  const [filter] = useState(false);\n  const [sizeList] = useState(10);\n\n  const data = [\n    {\n      films: {\n        type: 'checkbox',\n        dataList: [`films_1`, `films_2`, `films_3`, `films_4`],\n      },\n    },\n    { gender: { type: 'list', dataList: ['male', 'female', 'a'] } },\n    { rotationPeriod: { type: 'number', dataList: ['0', '5'] } },\n  ];\n\n  useEffect(() => {\n    swapiService\n      .getAllPeople(\n        `${\n          +page > 9 || // change 9 on variable\n          (+page < 1 && !(currentElement === +page)) ||\n          page === null\n            ? 1\n            : page\n        } `,\n        filter,\n      )\n      .then(([peopleListFromServer, peopleCountFromServer]) => {\n        setPeopleList(peopleListFromServer);\n        setPeopleCount(peopleCountFromServer);\n      });\n  }, []);\n\n  const onChangeCurrentElement = (element) => {\n    if (!(element > 9 || element < 1 || currentElement === element)) {\n      swapiService\n        .getAllPeople(`${element}`, filter)\n        .then(([peopleListFromServer]) => {\n          setPeopleList(peopleListFromServer);\n          setCurrentElement(element);\n        });\n    }\n  };\n\n  if (!peopleList) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"people-page-list\">\n      <div className=\"people-page\">\n        <ItemList list={peopleList} lable=\"people\" />\n        <Pagination\n          totalCount={peopleCount}\n          currentPage={page === ':page' ? currentElement : page}\n          setCurrentPage={onChangeCurrentElement}\n          name=\"people\"\n          size={sizeList}\n        />\n      </div>\n      <div className=\"people-page-filter\">\n        <QueryWork data={data} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}