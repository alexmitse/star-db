{"ast":null,"code":"import _slicedToArray from \"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/amitsevich/STAR-DB/star-db/src/components/search/search.jsx\";\n\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect, useRef } from 'react';\nimport './search.css';\nimport SwapiService from '../../services/swapi-service';\nimport SearchList from '../search-list';\nexport default function Search() {\n  const swapiService = new SwapiService();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        display = _useState4[0],\n        setDisplay = _useState4[1];\n\n  const listInput = useRef(null);\n\n  const onTermChange = () => {\n    const value = listInput.current.value;\n\n    if (listInput.current.value !== '') {\n      console.log(listInput.current.value);\n      setTimeout(() => {\n        swapiService.getElement(listInput.current.value).then(listFromServer => {\n          setList(listFromServer);\n          console.log(listFromServer);\n        });\n      }, 2000);\n    } else {\n      console.log(listInput.current.value);\n      setList(null);\n    }\n  };\n\n  useEffect(() => {\n    setList(undefined);\n  }, [display]);\n  return React.createElement(\"div\", {\n    className: \"container-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onInput: onTermChange,\n    ref: listInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), list && display && React.createElement(SearchList, {\n    list: list,\n    display: display,\n    setDisplay: setDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/search/search.jsx"],"names":["React","useState","useEffect","useRef","SwapiService","SearchList","Search","swapiService","list","setList","display","setDisplay","listInput","onTermChange","value","current","console","log","setTimeout","getElement","then","listFromServer","undefined"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,YAAY,GAAG,IAAIH,YAAJ,EAArB;;AAD+B,oBAEPH,QAAQ,CAAC,IAAD,CAFD;AAAA;AAAA,QAExBO,IAFwB;AAAA,QAElBC,OAFkB;;AAAA,qBAGDR,QAAQ,CAAC,IAAD,CAHP;AAAA;AAAA,QAGxBS,OAHwB;AAAA,QAGfC,UAHe;;AAI/B,QAAMC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;;AACA,QAAMU,YAAY,GAAG,MAAM;AACzB,UAAMC,KAAK,GAAGF,SAAS,CAACG,OAAV,CAAkBD,KAAhC;;AACA,QAAIF,SAAS,CAACG,OAAV,CAAkBD,KAAlB,KAA4B,EAAhC,EAAoC;AAClCE,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACG,OAAV,CAAkBD,KAA9B;AACAI,MAAAA,UAAU,CAAC,MAAM;AACfX,QAAAA,YAAY,CACTY,UADH,CACcP,SAAS,CAACG,OAAV,CAAkBD,KADhC,EAEGM,IAFH,CAESC,cAAD,IAAoB;AACxBZ,UAAAA,OAAO,CAACY,cAAD,CAAP;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ;AACD,SALH;AAMD,OAPS,EAOP,IAPO,CAAV;AAQD,KAVD,MAUO;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACG,OAAV,CAAkBD,KAA9B;AACAL,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAhBD;;AAkBAP,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACa,SAAD,CAAP;AACD,GAFQ,EAEN,CAACZ,OAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,OAAO,EAAEG,YAA5B;AAA0C,IAAA,GAAG,EAAED,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,IAAI,IAAIE,OAAR,IACC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,IAAlB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAA0C,IAAA,UAAU,EAAEC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAQD","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect, useRef } from 'react';\nimport './search.css';\nimport SwapiService from '../../services/swapi-service';\nimport SearchList from '../search-list';\n\nexport default function Search() {\n  const swapiService = new SwapiService();\n  const [list, setList] = useState(null);\n  const [display, setDisplay] = useState(true);\n  const listInput = useRef(null);\n  const onTermChange = () => {\n    const value = listInput.current.value;\n    if (listInput.current.value !== '') {\n      console.log(listInput.current.value);\n      setTimeout(() => {\n        swapiService\n          .getElement(listInput.current.value)\n          .then((listFromServer) => {\n            setList(listFromServer);\n            console.log(listFromServer);\n          });\n      }, 2000);\n    } else {\n      console.log(listInput.current.value);\n      setList(null);\n    }\n  };\n\n  useEffect(() => {\n    setList(undefined);\n  }, [display]);\n\n  return (\n    <div className=\"container-search\">\n      <input type=\"text\" onInput={onTermChange} ref={listInput} />\n      {list && display && (\n        <SearchList list={list} display={display} setDisplay={setDisplay} />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}