{"ast":null,"code":"import _slicedToArray from \"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/amitsevich/STAR-DB/star-db/src/components/search-item-list/search-item-list.jsx\";\n\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './search-item-list.css';\nimport SwapiService from '../../services/swapi-service';\nimport SearchList from '../search-list';\nimport PaginationSearch from '../pagination-search';\nimport Spinner from '../spinner';\nexport default function SearchItemList() {\n  let _useParams = useParams(),\n      str = _useParams.str;\n\n  const swapiService = new SwapiService();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        term = _useState2[0],\n        setTerm = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        list = _useState4[0],\n        setList = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        count = _useState6[0],\n        setCount = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentElement = _useState8[0],\n        setCurrentElement = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        display = _useState10[0],\n        setDisplay = _useState10[1];\n\n  let searchItem;\n  str = 3;\n  console.log(srt);\n\n  const onHandleSubmit = event => {\n    swapiService.getElement(searchItem).then(listFromServer => {\n      setCount(listFromServer.length);\n      location.pathname = '/search=t';\n      setList(listFromServer);\n    });\n\n    if (event !== undefined) {\n      swapiService.getElement(term).then(listFromServer => {\n        setCount(listFromServer.length);\n        setList(listFromServer);\n      });\n      event.preventDefault();\n    }\n  };\n\n  const onTermChange = e => {\n    if (typeof e === 'string') {\n      searchItem = e;\n      setTerm(searchItem);\n    } else {\n      searchItem = e.target.value;\n      setTerm(e.target.value);\n    }\n\n    onHandleSubmit();\n  };\n\n  useEffect(() => {\n    onTermChange(str);\n  }, [str]);\n  if (!list) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onHandleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: term,\n    onInput: onTermChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"go\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), list && React.createElement(SearchList, {\n    list: list,\n    propTerm: term,\n    display: display,\n    currentPage: currentElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), list && React.createElement(PaginationSearch, {\n    totalCount: count,\n    currentPage: currentElement,\n    setCurrentPage: setCurrentElement,\n    name: list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/search-item-list/search-item-list.jsx"],"names":["React","useState","useEffect","useParams","useLocation","SwapiService","SearchList","PaginationSearch","Spinner","SearchItemList","str","swapiService","term","setTerm","list","setList","count","setCount","currentElement","setCurrentElement","display","setDisplay","searchItem","console","log","srt","onHandleSubmit","event","getElement","then","listFromServer","length","location","pathname","undefined","preventDefault","onTermChange","e","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './search-item-list.css';\nimport SwapiService from '../../services/swapi-service';\nimport SearchList from '../search-list';\nimport PaginationSearch from '../pagination-search';\nimport Spinner from '../spinner';\n\nexport default function SearchItemList() {\n  let { str } = useParams();\n  const swapiService = new SwapiService();\n  const [term, setTerm] = useState(null);\n  const [list, setList] = useState(null);\n  const [count, setCount] = useState(null);\n  const [currentElement, setCurrentElement] = useState(1);\n  const [display, setDisplay] = useState(false);\n  let searchItem;\n  str = 3;\n  console.log(srt);\n  const onHandleSubmit = (event) => {\n    swapiService.getElement(searchItem).then((listFromServer) => {\n      setCount(listFromServer.length);\n      location.pathname = '/search=t';\n      setList(listFromServer);\n    });\n    if (event !== undefined) {\n      swapiService.getElement(term).then((listFromServer) => {\n        setCount(listFromServer.length);\n        setList(listFromServer);\n      });\n      event.preventDefault();\n    }\n  };\n  const onTermChange = (e) => {\n    if (typeof e === 'string') {\n      searchItem = e;\n      setTerm(searchItem);\n    } else {\n      searchItem = e.target.value;\n      setTerm(e.target.value);\n    }\n    onHandleSubmit();\n  };\n\n  useEffect(() => {\n    onTermChange(str);\n  }, [str]);\n\n  if (!list) return <Spinner />;\n\n  return (\n    <div>\n      <form onSubmit={onHandleSubmit}>\n        <input type=\"text\" value={term} onInput={onTermChange} />\n        <input type=\"submit\" value=\"go\" />\n      </form>\n      {list && (\n        <SearchList\n          list={list}\n          propTerm={term}\n          display={display}\n          currentPage={currentElement}\n        />\n      )}\n      {list && (\n        <PaginationSearch\n          totalCount={count}\n          currentPage={currentElement}\n          setCurrentPage={setCurrentElement}\n          name={list}\n        />\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}