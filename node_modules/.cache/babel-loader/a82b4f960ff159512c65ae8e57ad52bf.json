{"ast":null,"code":"import _slicedToArray from \"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/amitsevich/STAR-DB/star-db/src/components/filter/filter.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './filter.css';\nexport default function Filter({\n  data,\n  onSetObj,\n  query\n}) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        objFromServer = _useState2[0],\n        setObjFromServer = _useState2[1];\n\n  const newObj = {};\n\n  function mySort(arr, char) {\n    const copyArr = arr;\n    const count = copyArr.indexOf(char);\n    var _ref = [copyArr[count], copyArr[0]];\n    copyArr[0] = _ref[0];\n    copyArr[count] = _ref[1];\n    return copyArr;\n  }\n\n  useEffect(() => {\n    data.forEach(item => {\n      const objNextProperty = item[Object.keys(item)];\n\n      switch (objNextProperty.type) {\n        case 'checkbox':\n          newObj[objNextProperty.type] = {};\n          newObj[objNextProperty.type][[...Object.keys(item)]] = {};\n          objNextProperty.dataList.map(el => {\n            newObj[objNextProperty.type][[...Object.keys(item)]][el] = false;\n            return newObj[objNextProperty.type][[...Object.keys(item)]][el];\n          });\n          break;\n\n        case 'list':\n          newObj[objNextProperty.type] = {};\n          newObj[objNextProperty.type][[...Object.keys(item)]] = [...objNextProperty.dataList];\n          break;\n\n        case 'number':\n          newObj[objNextProperty.type] = {};\n          newObj[objNextProperty.type][[...Object.keys(item)]] = {\n            from: objNextProperty.dataList[0],\n            to: objNextProperty.dataList[1]\n          };\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (query) {\n      Object.keys(query).forEach(elem => {\n        data.forEach(item => {\n          const objNextProperty = item[Object.keys(item)];\n\n          const _objNextProperty$data = _slicedToArray(objNextProperty.dataList, 2),\n                from = _objNextProperty$data[0],\n                to = _objNextProperty$data[1];\n\n          switch (objNextProperty.type) {\n            case 'checkbox':\n              objNextProperty.dataList.map(el => {\n                if (Object.keys(newObj[objNextProperty.type])[0] === elem) {\n                  if (Array.isArray(query[elem])) {\n                    query[elem].forEach(qElem => {\n                      if (el === qElem) {\n                        newObj[objNextProperty.type][[...Object.keys(item)]][qElem] = true;\n                      }\n                    });\n                  }\n\n                  if (!Array.isArray(query[elem])) {\n                    if (el === query[elem]) {\n                      newObj[objNextProperty.type][[...Object.keys(item)]][query[elem]] = true;\n                    }\n                  }\n                }\n\n                return newObj[objNextProperty.type][[...Object.keys(item)]][el];\n              });\n              break;\n\n            case 'list':\n              if (Object.keys(newObj[objNextProperty.type])[0] === elem) {\n                if (objNextProperty.dataList.includes(query[elem])) {\n                  newObj[objNextProperty.type][[...Object.keys(item)]] = mySort(objNextProperty.dataList, query[elem]);\n                }\n              }\n\n              break;\n\n            case 'number':\n              if (elem.includes('from') && +from < +query[elem] && +query[elem] < +to) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].from = query[elem];\n              }\n\n              if (elem.includes('from') && !(+from < +query[elem] && +query[elem] < +to)) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].from = from;\n              }\n\n              if (elem.includes('to') && +from < +query[elem] && +query[elem] < +to) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].to = query[elem];\n              }\n\n              if (elem.includes('to') && !(+from < +query[elem] && +query[elem] < +to)) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].to = to;\n              }\n\n              break;\n\n            default:\n              break;\n          }\n        });\n      });\n    }\n\n    setObjFromServer(newObj);\n  }, []);\n  const obj = {};\n\n  function handlerForm(e) {\n    const options = e.target.querySelectorAll('option');\n\n    for (let i = 0; i < options.length; i += 1) {\n      if (options[i].selected) {\n        Object.keys(objFromServer).forEach(item => {\n          if (item === 'list') {\n            Object.keys(objFromServer[item]).forEach(el => {\n              objFromServer[item][el] = [e.target.value];\n            });\n          }\n        });\n      }\n    }\n\n    if (e.target.checked) {\n      if (objFromServer[e.target.type][e.target.value.split('_')[0]]) {\n        objFromServer[e.target.type][e.target.value.split('_')[0]][e.target.value] = e.target.checked;\n      }\n    }\n\n    if (!e.target.checked) {\n      if (e.target.type === 'checkbox') if (objFromServer[e.target.type][e.target.value.split('_')[0]]) {\n        objFromServer[e.target.type][e.target.value.split('_')[0]][e.target.value] = false;\n      }\n    }\n\n    if (+e.target.value >= +e.target.min && +e.target.value <= +e.target.max && e.target.value !== '') {\n      if (e.target.name === 'from') {\n        Object.keys(objFromServer).forEach(item => {\n          if (item === 'number') {\n            Object.keys(objFromServer[item]).forEach(el => {\n              obj.from = e.target.value;\n              objFromServer[item][el] = obj;\n            });\n          }\n        });\n      }\n\n      if (e.target.name === 'to') {\n        Object.keys(objFromServer).forEach(item => {\n          if (item === 'number') {\n            Object.keys(objFromServer[item]).forEach(el => {\n              obj.to = e.target.value;\n              objFromServer[item][el] = obj;\n            });\n          }\n        });\n      }\n    }\n\n    onSetObj(objFromServer);\n    setObjFromServer(objFromServer);\n  }\n\n  const renderFilter = datas => {\n    return Object.keys(datas).map(item => {\n      switch (item) {\n        case 'checkbox':\n          return React.createElement(\"label\", {\n            key: \"checkbox\",\n            style: {\n              color: 'white'\n            },\n            htmlFor: \"checkbox\",\n            className: \"wraper-filter-items\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, Object.keys(datas[item]).map(el => el), Object.keys(datas[item]).map(el => Object.entries(datas[item][el]).map(keyValue => {\n            if (keyValue[1]) return React.createElement(\"label\", {\n              key: keyValue[0],\n              style: {\n                color: 'white'\n              },\n              htmlFor: keyValue[0],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: item,\n              value: keyValue[0],\n              defaultChecked: true,\n              id: el,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 207\n              },\n              __self: this\n            }), keyValue[0]);\n            return React.createElement(\"label\", {\n              key: keyValue[0],\n              style: {\n                color: 'white'\n              },\n              htmlFor: keyValue[0],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 217\n              },\n              __self: this\n            }, React.createElement(\"input\", {\n              type: item,\n              value: keyValue[0],\n              id: el,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 222\n              },\n              __self: this\n            }), keyValue[0]);\n          })));\n\n        case 'list':\n          return React.createElement(\"label\", {\n            key: \"list\",\n            style: {\n              color: 'white'\n            },\n            htmlFor: \"list\",\n            className: \"wraper-filter-items\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, Object.keys(datas[item]).map(el => el), React.createElement(\"select\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, Object.keys(datas[item]).map(el => Object.values(datas[item][el]).map(keyValue => {\n            return React.createElement(\"option\", {\n              key: keyValue,\n              label: keyValue,\n              value: keyValue,\n              id: el,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 243\n              },\n              __self: this\n            });\n          }))));\n\n        case 'number':\n          return React.createElement(\"label\", {\n            key: \"number\",\n            style: {\n              color: 'white'\n            },\n            htmlFor: \"number\",\n            className: \"wraper-filter-items\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          }, Object.keys(datas[item]).map(el => el), Object.keys(datas[item]).map(el => {\n            const minmax = [];\n            Object.entries(datas[item][el]).map(keyValue => minmax.push(keyValue[1]));\n            return Object.entries(datas[item][el]).map(keyValue => {\n              return React.createElement(\"label\", {\n                key: keyValue[0],\n                style: {\n                  color: 'white'\n                },\n                htmlFor: keyValue[0],\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 271\n                },\n                __self: this\n              }, keyValue[0], React.createElement(\"input\", {\n                defaultValue: keyValue[1],\n                name: keyValue[0],\n                type: item,\n                min: minmax[0],\n                max: minmax[1],\n                id: el,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 277\n                },\n                __self: this\n              }));\n            });\n          }));\n\n        default:\n          return new Error('u should be loch');\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onChange: handlerForm,\n    className: \"form-filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, renderFilter(objFromServer)));\n}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/filter/filter.jsx"],"names":["React","useState","useEffect","Filter","data","onSetObj","query","objFromServer","setObjFromServer","newObj","mySort","arr","char","copyArr","count","indexOf","forEach","item","objNextProperty","Object","keys","type","dataList","map","el","from","to","elem","Array","isArray","qElem","includes","obj","handlerForm","e","options","target","querySelectorAll","i","length","selected","value","checked","split","min","max","name","renderFilter","datas","color","entries","keyValue","values","minmax","push","Error"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './filter.css';\n\nexport default function Filter({ data, onSetObj, query }) {\n  const [objFromServer, setObjFromServer] = useState({});\n  const newObj = {};\n  function mySort(arr, char) {\n    const copyArr = arr;\n    const count = copyArr.indexOf(char);\n    [copyArr[0], copyArr[count]] = [copyArr[count], copyArr[0]];\n    return copyArr;\n  }\n  useEffect(() => {\n    data.forEach((item) => {\n      const objNextProperty = item[Object.keys(item)];\n      switch (objNextProperty.type) {\n        case 'checkbox':\n          newObj[objNextProperty.type] = {};\n          newObj[objNextProperty.type][[...Object.keys(item)]] = {};\n          objNextProperty.dataList.map((el) => {\n            newObj[objNextProperty.type][[...Object.keys(item)]][el] = false;\n            return newObj[objNextProperty.type][[...Object.keys(item)]][el];\n          });\n          break;\n        case 'list':\n          newObj[objNextProperty.type] = {};\n          newObj[objNextProperty.type][[...Object.keys(item)]] = [\n            ...objNextProperty.dataList,\n          ];\n\n          break;\n        case 'number':\n          newObj[objNextProperty.type] = {};\n          newObj[objNextProperty.type][[...Object.keys(item)]] = {\n            from: objNextProperty.dataList[0],\n            to: objNextProperty.dataList[1],\n          };\n          break;\n\n        default:\n          break;\n      }\n    });\n    if (query) {\n      Object.keys(query).forEach((elem) => {\n        data.forEach((item) => {\n          const objNextProperty = item[Object.keys(item)];\n          const [from, to] = objNextProperty.dataList;\n          switch (objNextProperty.type) {\n            case 'checkbox':\n              objNextProperty.dataList.map((el) => {\n                if (Object.keys(newObj[objNextProperty.type])[0] === elem) {\n                  if (Array.isArray(query[elem])) {\n                    query[elem].forEach((qElem) => {\n                      if (el === qElem) {\n                        newObj[objNextProperty.type][[...Object.keys(item)]][\n                          qElem\n                        ] = true;\n                      }\n                    });\n                  }\n                  if (!Array.isArray(query[elem])) {\n                    if (el === query[elem]) {\n                      newObj[objNextProperty.type][[...Object.keys(item)]][\n                        query[elem]\n                      ] = true;\n                    }\n                  }\n                }\n                return newObj[objNextProperty.type][[...Object.keys(item)]][el];\n              });\n\n              break;\n            case 'list':\n              if (Object.keys(newObj[objNextProperty.type])[0] === elem) {\n                if (objNextProperty.dataList.includes(query[elem])) {\n                  newObj[objNextProperty.type][[...Object.keys(item)]] = mySort(\n                    objNextProperty.dataList,\n                    query[elem],\n                  );\n                }\n              }\n              break;\n            case 'number':\n              if (\n                elem.includes('from') &&\n                +from < +query[elem] &&\n                +query[elem] < +to\n              ) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].from =\n                  query[elem];\n              }\n              if (\n                elem.includes('from') &&\n                !(+from < +query[elem] && +query[elem] < +to)\n              ) {\n                newObj[objNextProperty.type][\n                  [...Object.keys(item)]\n                ].from = from;\n              }\n              if (\n                elem.includes('to') &&\n                +from < +query[elem] &&\n                +query[elem] < +to\n              ) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].to =\n                  query[elem];\n              }\n              if (\n                elem.includes('to') &&\n                !(+from < +query[elem] && +query[elem] < +to)\n              ) {\n                newObj[objNextProperty.type][[...Object.keys(item)]].to = to;\n              }\n              break;\n\n            default:\n              break;\n          }\n        });\n      });\n    }\n    setObjFromServer(newObj);\n  }, []);\n\n  const obj = {};\n  function handlerForm(e) {\n    const options = e.target.querySelectorAll('option');\n    for (let i = 0; i < options.length; i += 1) {\n      if (options[i].selected) {\n        Object.keys(objFromServer).forEach((item) => {\n          if (item === 'list') {\n            Object.keys(objFromServer[item]).forEach((el) => {\n              objFromServer[item][el] = [e.target.value];\n            });\n          }\n        });\n      }\n    }\n    if (e.target.checked) {\n      if (objFromServer[e.target.type][e.target.value.split('_')[0]]) {\n        objFromServer[e.target.type][e.target.value.split('_')[0]][\n          e.target.value\n        ] = e.target.checked;\n      }\n    }\n    if (!e.target.checked) {\n      if (e.target.type === 'checkbox')\n        if (objFromServer[e.target.type][e.target.value.split('_')[0]]) {\n          objFromServer[e.target.type][e.target.value.split('_')[0]][\n            e.target.value\n          ] = false;\n        }\n    }\n    if (\n      +e.target.value >= +e.target.min &&\n      +e.target.value <= +e.target.max &&\n      e.target.value !== ''\n    ) {\n      if (e.target.name === 'from') {\n        Object.keys(objFromServer).forEach((item) => {\n          if (item === 'number') {\n            Object.keys(objFromServer[item]).forEach((el) => {\n              obj.from = e.target.value;\n              objFromServer[item][el] = obj;\n            });\n          }\n        });\n      }\n      if (e.target.name === 'to') {\n        Object.keys(objFromServer).forEach((item) => {\n          if (item === 'number') {\n            Object.keys(objFromServer[item]).forEach((el) => {\n              obj.to = e.target.value;\n              objFromServer[item][el] = obj;\n            });\n          }\n        });\n      }\n    }\n    onSetObj(objFromServer);\n    setObjFromServer(objFromServer);\n  }\n\n  const renderFilter = (datas) => {\n    return Object.keys(datas).map((item) => {\n      switch (item) {\n        case 'checkbox':\n          return (\n            <label\n              key=\"checkbox\"\n              style={{ color: 'white' }}\n              htmlFor=\"checkbox\"\n              className=\"wraper-filter-items\"\n            >\n              {Object.keys(datas[item]).map((el) => el)}\n              {Object.keys(datas[item]).map((el) =>\n                Object.entries(datas[item][el]).map((keyValue) => {\n                  if (keyValue[1])\n                    return (\n                      <label\n                        key={keyValue[0]}\n                        style={{ color: 'white' }}\n                        htmlFor={keyValue[0]}\n                      >\n                        <input\n                          type={item}\n                          value={keyValue[0]}\n                          defaultChecked\n                          id={el}\n                        />\n                        {keyValue[0]}\n                      </label>\n                    );\n                  return (\n                    <label\n                      key={keyValue[0]}\n                      style={{ color: 'white' }}\n                      htmlFor={keyValue[0]}\n                    >\n                      <input type={item} value={keyValue[0]} id={el} />\n                      {keyValue[0]}\n                    </label>\n                  );\n                }),\n              )}\n            </label>\n          );\n        case 'list':\n          return (\n            <label\n              key=\"list\"\n              style={{ color: 'white' }}\n              htmlFor=\"list\"\n              className=\"wraper-filter-items\"\n            >\n              {Object.keys(datas[item]).map((el) => el)}\n              <select>\n                {Object.keys(datas[item]).map((el) =>\n                  Object.values(datas[item][el]).map((keyValue) => {\n                    return (\n                      <option\n                        key={keyValue}\n                        label={keyValue}\n                        value={keyValue}\n                        id={el}\n                      />\n                    );\n                  }),\n                )}\n              </select>\n            </label>\n          );\n        case 'number':\n          return (\n            <label\n              key=\"number\"\n              style={{ color: 'white' }}\n              htmlFor=\"number\"\n              className=\"wraper-filter-items\"\n            >\n              {Object.keys(datas[item]).map((el) => el)}\n              {Object.keys(datas[item]).map((el) => {\n                const minmax = [];\n                Object.entries(datas[item][el]).map((keyValue) =>\n                  minmax.push(keyValue[1]),\n                );\n                return Object.entries(datas[item][el]).map((keyValue) => {\n                  return (\n                    <label\n                      key={keyValue[0]}\n                      style={{ color: 'white' }}\n                      htmlFor={keyValue[0]}\n                    >\n                      {keyValue[0]}\n                      <input\n                        defaultValue={keyValue[1]}\n                        name={keyValue[0]}\n                        type={item}\n                        min={minmax[0]}\n                        max={minmax[1]}\n                        id={el}\n                      />\n                    </label>\n                  );\n                });\n              })}\n            </label>\n          );\n\n        default:\n          return new Error('u should be loch');\n      }\n    });\n  };\n  return (\n    <div className=\"container-filter\">\n      <form onChange={handlerForm} className=\"form-filter\">\n        {renderFilter(objFromServer)}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}