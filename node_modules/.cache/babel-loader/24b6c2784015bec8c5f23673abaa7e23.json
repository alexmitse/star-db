{"ast":null,"code":"import _regeneratorRuntime from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/* eslint-disable no-await-in-loop */ /* eslint-disable class-methods-use-this */var SwapiService=/*#__PURE__*/function(){function SwapiService(){_classCallCheck(this,SwapiService);this.apiBase='https://server-star-db.herokuapp.com';this.transformSearch=function(search){return{lable:search.tablename,id:search.id,name:search.name};};this.transformPlanet=function(planet){return{id:planet.id,lable:'planets',name:planet.name,climate:planet.climate,population:planet.population,people:planet.people,films:planet.films};};this.transformStarship=function(starship){return{id:starship.id,lable:'starships',name:starship.name,model:starship.model,length:starship.length,people:starship.people,films:starship.films};};this.transformPerson=function(person){return{id:person.id,lable:'people',name:person.name,gender:person.gender,homeworld:person.planet,films:person.films,species:person.species,vehicles:person.vehicles,starships:person.starships};};this.transformFilm=function(film){return{id:film.id,lable:'films',name:film.title,director:film.director,people:film.people,species:film.species,starships:film.starships,vehicles:film.vehicles,planets:film.planets};};this.transformSpecies=function(species){return{id:species.id,lable:'species',name:species.name,classification:species.classification,language:species.language,films:species.films,people:species.people};};this.transformVehicles=function(vehicles){return{id:vehicles.id,lable:'vehicles',name:vehicles.name,model:vehicles.model,length:vehicles.length,films:vehicles.films,people:vehicles.people};};}_createClass(SwapiService,[{key:\"getResource\",value:function getResource(url){var res,resJson;return _regeneratorRuntime.async(function getResource$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(fetch(\"\".concat(this.apiBase).concat(url)));case 2:res=_context.sent;if(res.ok){_context.next=5;break;}throw new Error(\"Could not fetch \".concat(url,\" , received \").concat(res.status));case 5:_context.next=7;return _regeneratorRuntime.awrap(res.json());case 7:resJson=_context.sent;return _context.abrupt(\"return\",resJson);case 9:case\"end\":return _context.stop();}}},null,this);}},{key:\"getAllPeople\",value:function getAllPeople(number,filter){var res;return _regeneratorRuntime.async(function getAllPeople$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:res={};if(!filter){_context2.next=7;break;}_context2.next=4;return _regeneratorRuntime.awrap(this.getResource(\"\".concat(filter)));case 4:res=_context2.sent;_context2.next=10;break;case 7:_context2.next=9;return _regeneratorRuntime.awrap(this.getResource(\"/people/?page=\".concat(number)));case 9:res=_context2.sent;case 10:return _context2.abrupt(\"return\",[res.rows.map(this.transformPerson),res.count]);case 11:case\"end\":return _context2.stop();}}},null,this);}},{key:\"getPerson\",value:function getPerson(id){var person;return _regeneratorRuntime.async(function getPerson$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/people/\".concat(id,\"/\")));case 2:person=_context3.sent;return _context3.abrupt(\"return\",this.transformPerson(person[0]));case 4:case\"end\":return _context3.stop();}}},null,this);}},{key:\"getAllPlanets\",value:function getAllPlanets(number,filter){var res;return _regeneratorRuntime.async(function getAllPlanets$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:res={};if(!filter){_context4.next=7;break;}_context4.next=4;return _regeneratorRuntime.awrap(this.getResource(\"\".concat(filter)));case 4:res=_context4.sent;_context4.next=10;break;case 7:_context4.next=9;return _regeneratorRuntime.awrap(this.getResource(\"/planets/?page=\".concat(number)));case 9:res=_context4.sent;case 10:return _context4.abrupt(\"return\",[res.rows.map(this.transformPlanet),res.count]);case 11:case\"end\":return _context4.stop();}}},null,this);}},{key:\"getPlanet\",value:function getPlanet(id){var planet;return _regeneratorRuntime.async(function getPlanet$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/planets/\".concat(id,\"/\")));case 2:planet=_context5.sent;return _context5.abrupt(\"return\",this.transformPlanet(planet[0]));case 4:case\"end\":return _context5.stop();}}},null,this);}},{key:\"getAllStarships\",value:function getAllStarships(number,filter){var res;return _regeneratorRuntime.async(function getAllStarships$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:res={};if(!filter){_context6.next=7;break;}_context6.next=4;return _regeneratorRuntime.awrap(this.getResource(\"\".concat(filter)));case 4:res=_context6.sent;_context6.next=10;break;case 7:_context6.next=9;return _regeneratorRuntime.awrap(this.getResource(\"/starships/?page=\".concat(number)));case 9:res=_context6.sent;case 10:return _context6.abrupt(\"return\",[res.rows.map(this.transformStarship),res.count]);case 11:case\"end\":return _context6.stop();}}},null,this);}},{key:\"getStarship\",value:function getStarship(id){var starship;return _regeneratorRuntime.async(function getStarship$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/starships/\".concat(id)));case 2:starship=_context7.sent;return _context7.abrupt(\"return\",this.transformStarship(starship[0]));case 4:case\"end\":return _context7.stop();}}},null,this);}},{key:\"getAllFilms\",value:function getAllFilms(number,filter){var res;return _regeneratorRuntime.async(function getAllFilms$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:res={};if(!filter){_context8.next=7;break;}_context8.next=4;return _regeneratorRuntime.awrap(this.getResource(\"\".concat(filter)));case 4:res=_context8.sent;_context8.next=10;break;case 7:_context8.next=9;return _regeneratorRuntime.awrap(this.getResource(\"/films/?page=\".concat(number)));case 9:res=_context8.sent;case 10:return _context8.abrupt(\"return\",[res.rows.map(this.transformFilm),res.count]);case 11:case\"end\":return _context8.stop();}}},null,this);}},{key:\"getFilm\",value:function getFilm(id){var film;return _regeneratorRuntime.async(function getFilm$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/films/\".concat(id)));case 2:film=_context9.sent;return _context9.abrupt(\"return\",this.transformFilm(film[0]));case 4:case\"end\":return _context9.stop();}}},null,this);}},{key:\"getAllSpecies\",value:function getAllSpecies(number,filter){var res;return _regeneratorRuntime.async(function getAllSpecies$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:res={};if(!filter){_context10.next=7;break;}_context10.next=4;return _regeneratorRuntime.awrap(this.getResource(\"\".concat(filter)));case 4:res=_context10.sent;_context10.next=10;break;case 7:_context10.next=9;return _regeneratorRuntime.awrap(this.getResource(\"/species/?page=\".concat(number)));case 9:res=_context10.sent;case 10:return _context10.abrupt(\"return\",[res.rows.map(this.transformSpecies),res.count]);case 11:case\"end\":return _context10.stop();}}},null,this);}},{key:\"getSpecies\",value:function getSpecies(id){var species;return _regeneratorRuntime.async(function getSpecies$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/species/\".concat(id)));case 2:species=_context11.sent;return _context11.abrupt(\"return\",this.transformSpecies(species[0]));case 4:case\"end\":return _context11.stop();}}},null,this);}},{key:\"getAllVehicles\",value:function getAllVehicles(number,filter){var res;return _regeneratorRuntime.async(function getAllVehicles$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:res={};if(!filter){_context12.next=7;break;}_context12.next=4;return _regeneratorRuntime.awrap(this.getResource(\"\".concat(filter)));case 4:res=_context12.sent;_context12.next=10;break;case 7:_context12.next=9;return _regeneratorRuntime.awrap(this.getResource(\"/vehicles/?page=\".concat(number)));case 9:res=_context12.sent;case 10:return _context12.abrupt(\"return\",[res.rows.map(this.transformSpecies),res.count]);case 11:case\"end\":return _context12.stop();}}},null,this);}},{key:\"getVehicles\",value:function getVehicles(id){var vehicles;return _regeneratorRuntime.async(function getVehicles$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:_context13.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/vehicles/\".concat(id)));case 2:vehicles=_context13.sent;return _context13.abrupt(\"return\",this.transformVehicles(vehicles[0]));case 4:case\"end\":return _context13.stop();}}},null,this);}},{key:\"getElement\",value:function getElement(str,page){var res,result,count,peopleCount,planetsCount,filmsCount,speciesCount,vehiclesCount,starshipsCount;return _regeneratorRuntime.async(function getElement$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_context14.next=2;return _regeneratorRuntime.awrap(this.getResource(\"/search?page=\".concat(page,\"&search=\").concat(str)));case 2:res=_context14.sent;result=null;count=0;peopleCount=0;planetsCount=0;filmsCount=0;speciesCount=0;vehiclesCount=0;starshipsCount=0;if(str!==''){result=res.map(this.transformSearch);res.forEach(function(item){switch(item.tablename){case'people':peopleCount=+item.count;break;case'films':filmsCount=+item.count;break;case'planets':planetsCount=+item.count;break;case'species':speciesCount=+item.count;break;case'vehicles':vehiclesCount=+item.count;break;case'starships':starshipsCount=+item.count;break;default:break;}});}count=peopleCount+filmsCount+planetsCount+speciesCount+vehiclesCount+starshipsCount;return _context14.abrupt(\"return\",[result,count]);case 14:case\"end\":return _context14.stop();}}},null,this);}}]);return SwapiService;}();export{SwapiService as default};","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/services/swapi-service.js"],"names":["SwapiService","apiBase","transformSearch","search","lable","tablename","id","name","transformPlanet","planet","climate","population","people","films","transformStarship","starship","model","length","transformPerson","person","gender","homeworld","species","vehicles","starships","transformFilm","film","title","director","planets","transformSpecies","classification","language","transformVehicles","url","fetch","res","ok","Error","status","json","resJson","number","filter","getResource","rows","map","count","str","page","result","peopleCount","planetsCount","filmsCount","speciesCount","vehiclesCount","starshipsCount","forEach","item"],"mappings":"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","sourcesContent":["/* eslint-disable no-await-in-loop */\n/* eslint-disable class-methods-use-this */\nexport default class SwapiService {\n  apiBase = 'https://server-star-db.herokuapp.com';\n\n  async getResource(url) {\n    const res = await fetch(`${this.apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url} , received ${res.status}`);\n    }\n    const resJson = await res.json();\n    return resJson;\n  }\n\n  async getAllPeople(number, filter) {\n    let res = {};\n    if (filter) res = await this.getResource(`${filter}`);\n    else res = await this.getResource(`/people/?page=${number}`);\n    return [res.rows.map(this.transformPerson), res.count];\n  }\n\n  async getPerson(id) {\n    const person = await this.getResource(`/people/${id}/`);\n    return this.transformPerson(person[0]);\n  }\n\n  async getAllPlanets(number, filter) {\n    let res = {};\n    if (filter) res = await this.getResource(`${filter}`);\n    else res = await this.getResource(`/planets/?page=${number}`);\n    return [res.rows.map(this.transformPlanet), res.count];\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this.transformPlanet(planet[0]);\n  }\n\n  async getAllStarships(number, filter) {\n    let res = {};\n    if (filter) res = await this.getResource(`${filter}`);\n    else res = await this.getResource(`/starships/?page=${number}`);\n    return [res.rows.map(this.transformStarship), res.count];\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResource(`/starships/${id}`);\n    return this.transformStarship(starship[0]);\n  }\n\n  async getAllFilms(number, filter) {\n    let res = {};\n    if (filter) res = await this.getResource(`${filter}`);\n    else res = await this.getResource(`/films/?page=${number}`);\n    return [res.rows.map(this.transformFilm), res.count];\n  }\n\n  async getFilm(id) {\n    const film = await this.getResource(`/films/${id}`);\n    return this.transformFilm(film[0]);\n  }\n\n  async getAllSpecies(number, filter) {\n    let res = {};\n    if (filter) res = await this.getResource(`${filter}`);\n    else res = await this.getResource(`/species/?page=${number}`);\n    return [res.rows.map(this.transformSpecies), res.count];\n  }\n\n  async getSpecies(id) {\n    const species = await this.getResource(`/species/${id}`);\n    return this.transformSpecies(species[0]);\n  }\n\n  async getAllVehicles(number, filter) {\n    let res = {};\n    if (filter) res = await this.getResource(`${filter}`);\n    else res = await this.getResource(`/vehicles/?page=${number}`);\n    return [res.rows.map(this.transformSpecies), res.count];\n  }\n\n  async getVehicles(id) {\n    const vehicles = await this.getResource(`/vehicles/${id}`);\n    return this.transformVehicles(vehicles[0]);\n  }\n\n  async getElement(str, page) {\n    const res = await this.getResource(`/search?page=${page}&search=${str}`);\n    let result = null;\n    let count = 0;\n    let peopleCount = 0;\n    let planetsCount = 0;\n    let filmsCount = 0;\n    let speciesCount = 0;\n    let vehiclesCount = 0;\n    let starshipsCount = 0;\n\n    if (str !== '') {\n      result = res.map(this.transformSearch);\n      res.forEach((item) => {\n        switch (item.tablename) {\n          case 'people':\n            peopleCount = +item.count;\n            break;\n          case 'films':\n            filmsCount = +item.count;\n            break;\n          case 'planets':\n            planetsCount = +item.count;\n            break;\n          case 'species':\n            speciesCount = +item.count;\n            break;\n          case 'vehicles':\n            vehiclesCount = +item.count;\n            break;\n          case 'starships':\n            starshipsCount = +item.count;\n            break;\n          default:\n            break;\n        }\n      });\n    }\n    count =\n      peopleCount +\n      filmsCount +\n      planetsCount +\n      speciesCount +\n      vehiclesCount +\n      starshipsCount;\n    return [result, count];\n  }\n\n  transformSearch = (search) => {\n    return {\n      lable: search.tablename,\n      id: search.id,\n      name: search.name,\n    };\n  };\n\n  transformPlanet = (planet) => {\n    return {\n      id: planet.id,\n      lable: 'planets',\n      name: planet.name,\n      climate: planet.climate,\n      population: planet.population,\n      people: planet.people,\n      films: planet.films,\n    };\n  };\n\n  transformStarship = (starship) => {\n    return {\n      id: starship.id,\n      lable: 'starships',\n      name: starship.name,\n      model: starship.model,\n      length: starship.length,\n      people: starship.people,\n      films: starship.films,\n    };\n  };\n\n  transformPerson = (person) => {\n    return {\n      id: person.id,\n      lable: 'people',\n      name: person.name,\n      gender: person.gender,\n      homeworld: person.planet,\n      films: person.films,\n      species: person.species,\n      vehicles: person.vehicles,\n      starships: person.starships,\n    };\n  };\n\n  transformFilm = (film) => {\n    return {\n      id: film.id,\n      lable: 'films',\n      name: film.title,\n      director: film.director,\n      people: film.people,\n      species: film.species,\n      starships: film.starships,\n      vehicles: film.vehicles,\n      planets: film.planets,\n    };\n  };\n\n  transformSpecies = (species) => {\n    return {\n      id: species.id,\n      lable: 'species',\n      name: species.name,\n      classification: species.classification,\n      language: species.language,\n      films: species.films,\n      people: species.people,\n    };\n  };\n\n  transformVehicles = (vehicles) => {\n    return {\n      id: vehicles.id,\n      lable: 'vehicles',\n      name: vehicles.name,\n      model: vehicles.model,\n      length: vehicles.length,\n      films: vehicles.films,\n      people: vehicles.people,\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}