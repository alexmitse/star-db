{"ast":null,"code":"import _slicedToArray from\"/home/amitsevich/STAR-DB/star-db/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable import/no-extraneous-dependencies */import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import ItemList from'../item-list';import Pagination from'../pagination';import Spinner from'../spinner';import'./films-page-list.css';import SwapiService from'../../services/swapi-service';export default function FilmsPageList(){var swapiService=new SwapiService();function useQuery(){return new URLSearchParams(useLocation().search);}var query=useQuery();var page=query.get('page');var _useState=useState(null),_useState2=_slicedToArray(_useState,2),filmsCount=_useState2[0],setFilmsCount=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),filmsList=_useState4[0],setFilmsList=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),currentElement=_useState6[0],setCurrentElement=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,1),filter=_useState8[0];var _useState9=useState(10),_useState10=_slicedToArray(_useState9,1),sizeList=_useState10[0];useEffect(function(){swapiService.getAllFilms(\"\".concat(+page>9||// change 9 on variable\n+page<1&&!(currentElement===+page)||page===null?1:page,\" \"),filter).then(function(_ref){var _ref2=_slicedToArray(_ref,2),filmsListFromServer=_ref2[0],filmsCountFromServer=_ref2[1];setFilmsCount(filmsCountFromServer);setFilmsList(filmsListFromServer);});},[]);var onChangeCurrentElement=function onChangeCurrentElement(element){if(!(element>9||element<1||currentElement===element)){swapiService.getAllFilms(\"\".concat(element),null).then(function(_ref3){var _ref4=_slicedToArray(_ref3,1),filmsListFromServer=_ref4[0];setFilmsList(filmsListFromServer);setCurrentElement(element);});}};if(!filmsList){return React.createElement(Spinner,null);}return React.createElement(\"div\",{className:\"films-page\"},React.createElement(ItemList,{list:filmsList,lable:\"films\"}),React.createElement(Pagination,{totalCount:filmsCount,currentPage:page!==':page'?page:currentElement,setCurrentPage:onChangeCurrentElement,name:\"films\",size:sizeList}));}","map":{"version":3,"sources":["/home/amitsevich/STAR-DB/star-db/src/components/films-page-list/films-page-list.jsx"],"names":["React","useState","useEffect","useLocation","ItemList","Pagination","Spinner","SwapiService","FilmsPageList","swapiService","useQuery","URLSearchParams","search","query","page","get","filmsCount","setFilmsCount","filmsList","setFilmsList","currentElement","setCurrentElement","filter","sizeList","getAllFilms","then","filmsListFromServer","filmsCountFromServer","onChangeCurrentElement","element"],"mappings":"uJAAA,sDACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CAEA,cAAe,SAASC,CAAAA,aAAT,EAAyB,CACtC,GAAMC,CAAAA,YAAY,CAAG,GAAIF,CAAAA,YAAJ,EAArB,CACA,QAASG,CAAAA,QAAT,EAAoB,CAClB,MAAO,IAAIC,CAAAA,eAAJ,CAAoBR,WAAW,GAAGS,MAAlC,CAAP,CACD,CACD,GAAMC,CAAAA,KAAK,CAAGH,QAAQ,EAAtB,CACA,GAAMI,CAAAA,IAAI,CAAGD,KAAK,CAACE,GAAN,CAAU,MAAV,CAAb,CANsC,cAQFd,QAAQ,CAAC,IAAD,CARN,wCAQ/Be,UAR+B,eAQnBC,aARmB,8BASJhB,QAAQ,CAAC,IAAD,CATJ,yCAS/BiB,SAT+B,eASpBC,YAToB,8BAUMlB,QAAQ,CAAC,CAAD,CAVd,yCAU/BmB,cAV+B,eAUfC,iBAVe,8BAWrBpB,QAAQ,CAAC,KAAD,CAXa,yCAW/BqB,MAX+B,8BAYnBrB,QAAQ,CAAC,EAAD,CAZW,0CAY/BsB,QAZ+B,gBAatCrB,SAAS,CAAC,UAAM,CACdO,YAAY,CACTe,WADH,WAGM,CAACV,IAAD,CAAQ,CAAR,EAAa;AACZ,CAACA,IAAD,CAAQ,CAAR,EAAa,EAAEM,cAAc,GAAK,CAACN,IAAtB,CADd,EAEAA,IAAI,GAAK,IAFT,CAGI,CAHJ,CAIIA,IAPV,MASIQ,MATJ,EAWGG,IAXH,CAWQ,cAAiD,kCAA/CC,mBAA+C,UAA1BC,oBAA0B,UACrDV,aAAa,CAACU,oBAAD,CAAb,CACAR,YAAY,CAACO,mBAAD,CAAZ,CACD,CAdH,EAeD,CAhBQ,CAgBN,EAhBM,CAAT,CAkBA,GAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,OAAD,CAAa,CAC1C,GAAI,EAAEA,OAAO,CAAG,CAAV,EAAeA,OAAO,CAAG,CAAzB,EAA8BT,cAAc,GAAKS,OAAnD,CAAJ,CAAiE,CAC/DpB,YAAY,CACTe,WADH,WACkBK,OADlB,EAC6B,IAD7B,EAEGJ,IAFH,CAEQ,eAA2B,mCAAzBC,mBAAyB,UAC/BP,YAAY,CAACO,mBAAD,CAAZ,CACAL,iBAAiB,CAACQ,OAAD,CAAjB,CACD,CALH,EAMD,CACF,CATD,CAWA,GAAI,CAACX,SAAL,CAAgB,CACd,MAAO,qBAAC,OAAD,MAAP,CACD,CACD,MACE,4BAAK,SAAS,CAAC,YAAf,EACE,oBAAC,QAAD,EAAU,IAAI,CAAEA,SAAhB,CAA2B,KAAK,CAAC,OAAjC,EADF,CAEE,oBAAC,UAAD,EACE,UAAU,CAAEF,UADd,CAEE,WAAW,CAAEF,IAAI,GAAK,OAAT,CAAmBA,IAAnB,CAA0BM,cAFzC,CAGE,cAAc,CAAEQ,sBAHlB,CAIE,IAAI,CAAC,OAJP,CAKE,IAAI,CAAEL,QALR,EAFF,CADF,CAYD","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ItemList from '../item-list';\nimport Pagination from '../pagination';\nimport Spinner from '../spinner';\nimport './films-page-list.css';\nimport SwapiService from '../../services/swapi-service';\n\nexport default function FilmsPageList() {\n  const swapiService = new SwapiService();\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n  const query = useQuery();\n  const page = query.get('page');\n\n  const [filmsCount, setFilmsCount] = useState(null);\n  const [filmsList, setFilmsList] = useState(null);\n  const [currentElement, setCurrentElement] = useState(1);\n  const [filter] = useState(false);\n  const [sizeList] = useState(10);\n  useEffect(() => {\n    swapiService\n      .getAllFilms(\n        `${\n          +page > 9 || // change 9 on variable\n          (+page < 1 && !(currentElement === +page)) ||\n          page === null\n            ? 1\n            : page\n        } `,\n        filter,\n      )\n      .then(([filmsListFromServer, filmsCountFromServer]) => {\n        setFilmsCount(filmsCountFromServer);\n        setFilmsList(filmsListFromServer);\n      });\n  }, []);\n\n  const onChangeCurrentElement = (element) => {\n    if (!(element > 9 || element < 1 || currentElement === element)) {\n      swapiService\n        .getAllFilms(`${element}`, null)\n        .then(([filmsListFromServer]) => {\n          setFilmsList(filmsListFromServer);\n          setCurrentElement(element);\n        });\n    }\n  };\n\n  if (!filmsList) {\n    return <Spinner />;\n  }\n  return (\n    <div className=\"films-page\">\n      <ItemList list={filmsList} lable=\"films\" />\n      <Pagination\n        totalCount={filmsCount}\n        currentPage={page !== ':page' ? page : currentElement}\n        setCurrentPage={onChangeCurrentElement}\n        name=\"films\"\n        size={sizeList}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}